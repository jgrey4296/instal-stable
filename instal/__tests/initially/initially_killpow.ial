institution init;

type Alpha;
type Beta;

exogenous event ex_a(Alpha);
exogenous event ex_b(Alpha, Beta);

inst event in_a(Alpha);
inst event in_b(Alpha, Alpha);
inst event in_c(Alpha, Beta);

fluent flu_a(Alpha);
fluent flu_b(Alpha, Beta);
fluent flu_c(Alpha, Alpha);

initially perm(ex_a(Alpha));
initially perm(ex_b(Alpha,Beta));
initially perm(in_a(Alpha));

initially pow(ex_a(Alpha));
initially pow(ex_b(Alpha, Beta));

initially flu_a(Alpha);
initially flu_b(Alpha,Beta);
initially flu_c(Alpha,Alpha);

exogenous event kill(Alpha, Beta);
inst event kill_pow(Alpha, Beta);
initially perm(kill(Alpha, Beta));
initially pow(kill(Alpha, Beta));
initially perm(kill_pow(Alpha, Beta));
kill(A, B) generates kill_pow(A, B);

kill_pow(A, B) terminates pow(ex_a(A)), pow(ex_b(A, B));